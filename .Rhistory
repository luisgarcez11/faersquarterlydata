drugname_v <- c(drugname_v, drug)
}
drugname_PS
drugname_v
#by drugname
drugname_v <- c()
for (drug_element in tabular_faers_data$patient_drug){
drug <- sort(unlist(stringr::str_split( unique(drug_element$drugname),
pattern = "\\\\")) %>% stringr::str_squish())
drugname_v <- c(drugname_v, drug)
}
drugname_v
#by drugname
drugname_v <- c()
for (drug_element in tabular_faers_data$patient_drug){
drug <- sort(unlist(stringr::str_split( unique(drug_element$drugname),
pattern = "\\\\")) %>% stringr::str_squish())
drugname_v <- c(drugname_v, drug)
}
drugname_v
drugname_v
drug_element
names(drug_element)
#by drugname_PS
drugname_v <- c()
for (drug_element in tabular_faers_data$patient_drug){
drug <- sort(unlist(stringr::str_split( unique(drug_element$drugname[drug_element$role_cod == "PS"]),
pattern = "\\\\")) %>% stringr::str_squish())
drugname_v <- c(drugname_v, drug)
}
drugname_v %>%
table() %>%
as.data.frame() %>%
rename_all(~c("drugname", "n")) %>%
arrange(desc(n))
#by indication
indication_v <- c()
for (drug_element in tabular_faers_data$patient_drug){
indi <- sort(unlist(stringr::str_split( unique(drug_element$indi_pt),
pattern = "\\\\")) %>% stringr::str_squish())
indication_v <- c(indication_v, indi)
}
indication_v
tabular_faers_data_summary$indication <- indication_v %>%
table() %>%
as.data.frame() %>%
rename_all(~c("indication", "n")) %>%
arrange(desc(n))
#by indication
indication_v <- c()
for (drug_element in tabular_faers_data$patient_drug){
indi <- sort(unlist(stringr::str_split( unique(drug_element$indi_pt),
pattern = "\\\\")) %>% stringr::str_squish())
indication_v <- c(indication_v, indi)
}
tabular_faers_data_summary$indication <- indication_v %>%
table() %>%
as.data.frame() %>%
rename_all(~c("indication", "n")) %>%
arrange(desc(n))
tabular_faers_data_summary
#by drugname_PS
drugname_v <- tibble()
drug_element[,c("drugname", "role_cod")]
drug_element[,c("drugname", "role_cod")]
#by drugname_PS
drugname_v <- tibble()
for (drug_element in tabular_faers_data$patient_drug){
drug <- drug_element[,c("drugname", "role_cod")] %>%
tidyr::separate_rows(sep = "\\\\") %>%
mutate_at("drugname", ~stringr::str_squish(.))
drugname_v <- bind_rows(drugname_v, drug)
}
library(tidyr)
df <- tibble(
x = 1:3,
y = c("a", "d,e,f", "g,h"),
z = c("1", "2,3,4", "5,6")
)
separate_rows(df, y, z, convert = TRUE)
# Now recommended
df %>%
separate_longer_delim(c(y, z), delim = ",")
#by drugname_PS
drugname_v <- tibble()
#by drugname_PS
drugname_v <- tibble()
for (drug_element in tabular_faers_data$patient_drug){
print(drug_element)
drug <- drug_element[,c("drugname", "role_cod")] %>%
tidyr::separate_longer_delim(drugname, sep = "\\\\") %>%
mutate_at("drugname", ~stringr::str_squish(.))
drugname_v <- bind_rows(drugname_v, drug)
}
#by drugname_PS
drugname_v <- tibble()
for (drug_element in tabular_faers_data$patient_drug){
print(drug_element)
drug <- drug_element[,c("drugname", "role_cod")] %>%
tidyr::separate_longer_delim(drugname, delim = "\\\\") %>%
mutate_at("drugname", ~stringr::str_squish(.))
drugname_v <- bind_rows(drugname_v, drug)
}
drugname_v
drugname_v %>%
group_by(drugname, role_cod) %>%
summarize( n = n()) %>%
ungroup() %>%
arrange(desc(n))
drug_element$drugname <- "CARBIDOPA\\LEVODOPA"
drug_element[,c("drugname", "role_cod")]
drug_element[,c("drugname", "role_cod")] %>%
tidyr::separate_longer_delim(drugname, delim = "\\\\")
drug_element[,c("drugname", "role_cod")] %>%
tidyr::separate_longer_delim(drugname, delim = "\\")
#by drugname_PS
drugname_v <- tibble()
for (drug_element in tabular_faers_data$patient_drug){
print(drug_element)
drug <- drug_element[,c("drugname", "role_cod")] %>%
tidyr::separate_longer_delim(drugname, delim = "\\") %>%
mutate_at("drugname", ~stringr::str_squish(.))
drugname_v <- bind_rows(drugname_v, drug)
}
drugname_v %>%
group_by(drugname, role_cod) %>%
summarize( n = n()) %>%
ungroup() %>%
arrange(desc(n))
#by drugname_PS
drugname_v <- tibble()
for (drug_element in tabular_faers_data$patient_drug){
print(drug_element)
drug <- drug_element[,c("drugname", "role_cod")] %>%
tidyr::separate_longer_delim(drugname, delim = "\\") %>%
mutate_at("drugname", ~stringr::str_squish(.))
drugname_v <- bind_rows(drugname_v, drug)
}
drugname_v
drugname_v %>%
group_by(drugname, role_cod) %>%
summarize( n = n()) %>%
ungroup() %>%
arrange(desc(n))
drugname_v %>%
group_by(drugname, role_cod) %>%
summarize( n = n()) %>%
ungroup() %>%
arrange(desc(n))
drugname_v %>%
group_by(drugname, role_cod, .groups = TRUE) %>%
summarize( n = n()) %>%
ungroup() %>%
arrange(desc(n))
#by drugname_PS
drugname_v <- tibble()
for (drug_element in tabular_faers_data$patient_drug){
if("RITARY" == drug_element$drugname){stop()}
drug <- drug_element[,c("drugname", "role_cod")] %>%
tidyr::separate_longer_delim(drugname, delim = "\\") %>%
mutate_at("drugname", ~stringr::str_squish(.))
drugname_v <- bind_rows(drugname_v, drug)
}
drug_element$drugname
drug_element
drug_element$prod_ai
drug_element$drugname
#by drugname_PS
drugname_v <- tibble()
for (drug_element in tabular_faers_data$patient_drug){
if("RITARY" == drug_element$drugname){stop()}
drug <- drug_element[,c("drugname", "role_cod")] %>%
tidyr::separate_longer_delim(drugname, delim = "\\") %>%
mutate_at("drugname", ~stringr::str_squish(.))
drugname_v <- bind_rows(drugname_v, drug)
}
drugname_v
drugname_v %>%
group_by(drugname, role_cod) %>%
summarize( n = n()) %>%
ungroup()
drugname_v %>%
group_by(drugname, role_cod) %>%
summarize( n = n()) %>%
ungroup() %>%
pivot_wider(id_cols = "drugname" )
drugname_v %>%
group_by(drugname, role_cod) %>%
summarize( n = n()) %>%
ungroup() %>%
pivot_wider(id_cols = drugname )
drugname_v %>%
group_by(drugname, role_cod) %>%
summarize( n = n()) %>%
ungroup()
drugname_v %>%
group_by(drugname, role_cod) %>%
summarize( n = n()) %>%
ungroup() %>%
pivot_wider(names_from = role_cod, values_from = n)
#by drugname_PS
drugname_v <- tibble()
for (drug_element in tabular_faers_data$patient_drug){
drug <- drug_element[,c("drugname", "role_cod")] %>%
tidyr::separate_longer_delim(drugname, delim = "\\") %>%
mutate_at("drugname", ~stringr::str_squish(.))
drugname_v <- bind_rows(drugname_v, drug)
}
tabular_faers_data_summary$drug_name_ps
drugname_v %>%
group_by(drugname, role_cod) %>%
summarize( n = n()) %>%
ungroup() %>%
pivot_wider(names_from = role_cod, values_from = n, names_prefix = "n")
arrange(desc(n))
drugname_v %>%
group_by(drugname, role_cod) %>%
summarize( n = n()) %>%
ungroup() %>%
pivot_wider(names_from = role_cod, values_from = n, names_prefix = "n") %>%
arrange(desc(n))
drugname_v %>%
group_by(drugname, role_cod) %>%
summarize( n = n()) %>%
ungroup() %>%
pivot_wider(names_from = role_cod, values_from = n, names_prefix = "n")
drugname_v %>%
group_by(drugname, role_cod) %>%
summarize( n = n()) %>%
ungroup() %>%
pivot_wider(names_from = role_cod, values_from = n, names_prefix = "n_") %>%
arrange(desc(2))
drugname_v %>%
group_by(drugname, role_cod) %>%
summarize( n = n()) %>%
ungroup() %>%
pivot_wider(names_from = role_cod, values_from = n, names_prefix = "n_") %>%
arrange(desc(.[,2]))
drugname_v %>%
group_by(drugname, role_cod, .groups = "keep") %>%
summarize( n = n()) %>%
ungroup() %>%
pivot_wider(names_from = role_cod, values_from = n, names_prefix = "n_") %>%
arrange(desc(.[,2]))
drugname_v %>%
group_by(drugname, role_cod, .groups = "drop") %>%
summarize( n = n()) %>%
ungroup() %>%
pivot_wider(names_from = role_cod, values_from = n, names_prefix = "n_") %>%
arrange(desc(.[,2]))
drugname_v %>%
group_by(drugname, role_cod) %>%
summarize( n = n(), .groups = "keep") %>%
ungroup() %>%
pivot_wider(names_from = role_cod, values_from = n, names_prefix = "n_") %>%
arrange(desc(.[,2]))
#by drugname
drugname_v <- tibble()
for (drug_element in tabular_faers_data$patient_drug){
drug <- drug_element[,c("drugname", "role_cod")]
drugname_v <- bind_rows(drugname_v, drug)
}
drugname_v
drugname_v
drugname_v %>% View()
drug_element[,c("drugname", "role_cod")]
drug_element$drugname <- "CARBIDOPA \ LEVODOPA"
drug_element[,c("drugname", "role_cod")]
drug_element[,c("drugname", "role_cod")] %>%
tidyr::separate_longer_delim(drugname, delim = "\\")
drug_element[,c("drugname", "role_cod")] %>%
tidyr::separate_longer_delim(drugname, delim = "\\\\")
drug_element[,c("drugname", "role_cod")] %>%
tidyr::separate_longer_delim(drugname, delim = "\\\\")
drug_element$drugname
drug_element[,c("drugname", "role_cod")] %>%
tidyr::separate_longer_delim(drugname, delim = "\\\\")
drugname_v %>% View()
drugname_v[64,]
drugname_v[64,] -> drug_element
drug_element[,c("drugname", "role_cod")]
drug_element[,c("drugname", "role_cod")] %>%
tidyr::separate_longer_delim(drugname, delim = "\\\\")
drug_element[,c("drugname", "role_cod")] %>%
tidyr::separate_longer_delim(drugname, delim = "\\")
drug_element[,c("drugname", "role_cod")] %>%
tidyr::separate_longer_delim(drugname, delim = "\\") %>%
mutate_at("drugname", ~stringr::str_squish(.))
#by drugname
drugname_v <- tibble()
for (drug_element in tabular_faers_data$patient_drug){
drug <- drug_element[,c("drugname", "role_cod")] %>%
tidyr::separate_longer_delim(drugname, delim = "\\") %>%
mutate_at("drugname", ~stringr::str_squish(.))
drugname_v <- bind_rows(drugname_v, drug)
}
drugname_v %>%
group_by(drugname, role_cod) %>%
summarize( n = n(), .groups = "keep") %>%
ungroup() %>%
pivot_wider(names_from = role_cod, values_from = n, names_prefix = "n_") %>%
arrange(desc(.[,2]))
View(drugname_v)
#by indication#by drugname
indication_v <- tibble()
for (drug_element in tabular_faers_data$patient_drug){
indi <- drug_element[,c("indi_pt", "role_cod")] %>%
tidyr::separate_longer_delim(indi_pt, delim = "\\") %>%
mutate_at("indi_pt", ~stringr::str_squish(.))
indication_v <- bind_rows(indication_v, indi)
}
tabular_faers_data_summary
drug_element
indication_v %>%
group_by(indi_pt, role_cod) %>%
summarize( n = n(), .groups = "keep") %>%
ungroup() %>%
pivot_wider(names_from = role_cod, values_from = n, names_prefix = "n_") %>%
arrange(desc(.[,2]))
#by active ingredient
message("summarizing active ingredient")
prod_ai_v <- tibble()
for (drug_element in tabular_faers_data$prod_ai){
ai <- drug_element[,c("prod_ai", "role_cod")] %>%
tidyr::separate_longer_delim(prod_ai, delim = "\\") %>%
mutate_at("prod_ai", ~stringr::str_squish(.))
prod_ai_v <- bind_rows(prod_ai_v, ai)
}
drug_element[,c("prod_ai", "role_cod")]
drug_element
#by active ingredient
message("summarizing active ingredient")
prod_ai_v <- tibble()
for (drug_element in tabular_faers_data$patient_drug){
ai <- drug_element[,c("prod_ai", "role_cod")] %>%
tidyr::separate_longer_delim(prod_ai, delim = "\\") %>%
mutate_at("prod_ai", ~stringr::str_squish(.))
prod_ai_v <- bind_rows(prod_ai_v, ai)
}
prod_ai_v %>%
group_by(prod_ai_v, role_cod) %>%
summarize( n = n(), .groups = "keep") %>%
ungroup() %>%
pivot_wider(names_from = role_cod, values_from = n, names_prefix = "n_") %>%
arrange(desc(.[,2]))
prod_ai_v
prod_ai_v %>%
group_by(prod_ai, role_cod) %>%
summarize( n = n(), .groups = "keep") %>%
ungroup() %>%
pivot_wider(names_from = role_cod, values_from = n, names_prefix = "n_") %>%
arrange(desc(.[,2]))
tabular_faers_data_summary$prod_ai <- prod_ai_v %>%
group_by(prod_ai, role_cod) %>%
summarize( n = n(), .groups = "keep") %>%
ungroup() %>%
pivot_wider(names_from = role_cod, values_from = n, names_prefix = "n_") %>%
arrange(desc(.[,2]))
tabular_faers_data %>%
mutate(age_YR = case_when(age_cod == "YR" ~ as.numeric(age),
age_cod == "MON" ~ as.numeric(age)/30,
age_cod == "DY" ~ as.numeric(age)*365,
TRUE ~ as.numeric(age))) %>%
pull(age_YR) %>%
summary()
tabular_faers_data %>%
mutate(age_YR = case_when(age_cod == "YR" ~ as.numeric(age),
age_cod == "MON" ~ as.numeric(age)/30,
age_cod == "DY" ~ as.numeric(age)*365,
TRUE ~ as.numeric(age))) %>%
group_by(primaryid) %>%
summarize(i_f_code = unique(i_f_code),
rept_cod = unique(rept_cod),
mfr_sndr = unique(mfr_sndr),
age_YR = as.numeric(unique(age_YR)),
sex = unique(sex),
e_sub = unique(e_sub),
wt = as.numeric(unique(wt)),
reporter_country = unique(reporter_country),
occr_country = unique(occr_country)) %>%
ungroup() %>%
select(-primaryid) %>%
tableone::CreateTableOne(data = ., includeNA = FALSE )
tabular_faers_data %>%
mutate(age_YR = case_when(age_cod == "YR" ~ as.numeric(age),
age_cod == "MON" ~ as.numeric(age)/30,
age_cod == "DY" ~ as.numeric(age)*365,
TRUE ~ as.numeric(age))) %>%
group_by(primaryid) %>%
summarize(mfr_sndr = unique(mfr_sndr),
age_YR = as.numeric(unique(age_YR)),
sex = unique(sex),
e_sub = unique(e_sub),
wt = as.numeric(unique(wt)),
reporter_country = unique(reporter_country),
occr_country = unique(occr_country)) %>%
ungroup() %>%
select(-primaryid) %>%
tableone::CreateTableOne(data = ., includeNA = FALSE )
tabular_faers_data %>%
mutate(age_YR = case_when(age_cod == "YR" ~ as.numeric(age),
age_cod == "MON" ~ as.numeric(age)/30,
age_cod == "DY" ~ as.numeric(age)*365,
TRUE ~ as.numeric(age))) %>%
group_by(primaryid) %>%
summarize(mfr_sndr = unique(mfr_sndr),
age_YR = as.numeric(unique(age_YR)),
sex = unique(sex),
wt = as.numeric(unique(wt)),
reporter_country = unique(reporter_country),
occr_country = unique(occr_country)) %>%
ungroup() %>%
select(-primaryid) %>%
tableone::CreateTableOne(data = ., includeNA = FALSE )
tabular_faers_data$wt_cod
tabular_faers_data %>%
mutate(age_YR = case_when(age_cod == "YR" ~ as.numeric(age),
age_cod == "MON" ~ as.numeric(age)/30,
age_cod == "DY" ~ as.numeric(age)*365,
TRUE ~ as.numeric(age))) %>%
group_by(primaryid) %>%
summarize(mfr_sndr = unique(mfr_sndr),
age_YR = as.numeric(unique(age_YR)),
sex = unique(sex),
weight_kg = as.numeric(unique(wt)),
reporter_country = unique(reporter_country),
occr_country = unique(occr_country)) %>%
ungroup() %>%
select(-primaryid) %>%
tableone::CreateTableOne(data = ., includeNA = FALSE )
tabular_faers_data
tabular_faers_data
tabular_faers_data %>%
mutate(age_YR = case_when(age_cod == "YR" ~ as.numeric(age),
age_cod == "MON" ~ as.numeric(age)/30,
age_cod == "DY" ~ as.numeric(age)*365,
TRUE ~ as.numeric(age))) %>%
group_by(primaryid) %>%
summarize(mfr_sndr = unique(mfr_sndr),
age_YR = as.numeric(unique(age_YR)),
sex = unique(sex),
weight_kg = as.numeric(unique(wt)),
reporter_country = unique(reporter_country),
occr_country = unique(occr_country)) %>%
ungroup() %>%
select(-primaryid) %>%
tableone::CreateTableOne(data = ., includeNA = FALSE )
a
covr::package_coverage()
setwd("C:/Users/luis.ferreira/Desktop/faersquarterlydata/tests/testthat")
covr::package_coverage()
setwd("C:/Users/luis.ferreira/Desktop/faersquarterlydata")
devtools::load_all(".")
pivot_wider
devtools::load_all(".")
covr::package_coverage()
library(faersquarterlydata)
covr::package_coverage()
covr::package_coverage(path = ".")
covr::package_coverage()
estimate_ic(n11 = 20, n10 = 10, n01 = 200, n00 = 200)
source("C:/Users/luis.ferreira/Desktop/faersquarterlydata/R/ror.R")
estimate_ic(n11 = 20, n10 = 10, n01 = 200, n00 = 200)
#' @param n00 Number of all events from all groups
#' @param n00 Number of all events from all groups
#' @param ic_range Confidence Interval range
#'
#' @return List with Information Component estimate and its 0.95 IC
#' @export
#' @import dplyr
#'
#' @examples
#' estimate_ic(n11 = 20, n10 = 10, n01 = 200, n00 = 200)
estimate_ic <- function(n11, n10, n01, n00){
n11 <- as.numeric(n11)
n10 <- as.numeric(n10)
n01 <- as.numeric(n01)
n00 <- as.numeric(n00)
infoc <- list()
n11_exp <- ((n11 + n10) * (n11 + n01)) / (n11 + n10 + n01 + n00)
infoc$estimate <- log2((n11 + 0.5)/ (n11_exp + 0.5))
infoc$ic <- c(lower = infoc$estimate - 3.3 * (n11 + 0.5)^(-1/2) - 2 * (n11 +0.5)^(-3/2),
upper = infoc$estimate + 2.4 * (n11 + 0.5)^(-1/2) - 0.5 * (n11 +0.5)^(-3/2))
return(infoc)
}
estimate_ic(n11 = 20, n10 = 10, n01 = 200, n00 = 200)
#' Get duplicated caseIDs
#'
#' Retrieve the duplicated caseIDs to remove from the analysis.
#'
#' @param duplicates_dir directory path where the text files with the duplicates information are.
#'
#' @return an integer vector with all the caseids to be removed
#' @export
get_duplicate_caseids <- function(duplicates_dir = NULL){
if (is.null(duplicates_dir)){return("No duplicates")}
if (!dir.exists(duplicates_dir)) {
stop("directory does not exist")
}
deleted_files <- list.files(duplicates_dir, full.names = TRUE, pattern = ".txt")
caseid_to_be_removed <- c()
for (d_file in deleted_files){
read_file <- data.table::fread(d_file, sep = "$", quote = "", fill = FALSE)
caseid_to_be_removed <- c(caseid_to_be_removed, unique(read_file$V1))
}
return(caseid_to_be_removed)
}
testthat::expect_error(get_duplicate_caseids("hju"))
get_duplicate_caseids("hju")
get_duplicate_caseids(duplicates_dir = "resources/deleted")
covr::package_coverage()
covr::package_coverage()
