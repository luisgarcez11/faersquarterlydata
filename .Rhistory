library(faersquarterlydata)
estimate_ror_bygroup(als_faers_data_unified %>% filter(!is.na(age) %>% mutate(age_r = case_when(age >= 65 ~ ">=65",age < 65 ~ "<65")) %>% (age_r %in% c(">65", "<=65")), group_of_interest_col = "age_r", group_of_interest_ref = ">=65", event_of_interest_col = "pt")
estimate_ror_bygroup(als_faers_data_unified %>%
estimate_ror_bygroup(als_faers_data_unified %>%
filter(!is.na(age) %>% mutate(age_r = case_when(age >= 65 ~ ">=65",age < 65 ~ "<65")) %>% (age_r %in% c(">65", "<=65")),
group_of_interest_col = "age_r",
group_of_interest_ref = ">=65",
event_of_interest_col = "pt"))
library(dplyr)
estimate_ror_bygroup(als_faers_data_unified %>%
filter(!is.na(age) %>% mutate(age_r = case_when(age >= 65 ~ ">=65",age < 65 ~ "<65")) %>% (age_r %in% c(">65", "<=65")),
group_of_interest_col = "age_r",
group_of_interest_ref = ">=65",
event_of_interest_col = "pt"))
als_faers_data_unified %>%
filter(!is.na(age) %>% mutate(age_r = case_when(age >= 65 ~ ">=65",age < 65 ~ "<65")) %>% (age_r %in% c(">65", "<=65")),
group_of_interest_col = "age_r",
group_of_interest_ref = ">=65",
event_of_interest_col = "pt")
estimate_ror_bygroup(als_faers_data_unified %>%
filter(!is.na(age) %>% mutate(age_r = case_when(age >= 65 ~ ">=65",age < 65 ~ "<65")) %>% (age_r %in% c(">65", "<=65"))),
group_of_interest_col = "age_r",
group_of_interest_ref = ">=65",
event_of_interest_col = "pt")
als_faers_data_unified %>% filter(!is.na(age) %>% mutate(age_r = case_when(age >= 65 ~ ">=65",age < 65 ~ "<65")) %>% (age_r %in% c(">65", "<=65")))
estimate_ror_bygroup(als_faers_data_unified %>% filter(!is.na(age)) %>% mutate(age_r = case_when(age >= 65 ~ ">=65",age < 65 ~ "<65")) %>% (age_r %in% c(">65", "<=65")),
group_of_interest_col = "age_r",
group_of_interest_ref = ">=65",
event_of_interest_col = "pt")
estimate_ror_bygroup(als_faers_data_unified %>% filter(!is.na(age)) %>% mutate(age_r = case_when(age >= 65 ~ ">=65",age < 65 ~ "<65")) %>% filter(age_r %in% c(">65", "<=65")),
group_of_interest_col = "age_r",
group_of_interest_ref = ">=65",
event_of_interest_col = "pt")
als_faers_data_unified %>% filter(!is.na(age)) %>% mutate(age_r = case_when(age >= 65 ~ ">=65",age < 65 ~ "<65")) %>% filter(age_r %in% c(">65", "<=65"))
als_faers_data_unified %>% filter(!is.na(age))
als_faers_data_unified %>% filter(!is.na(age)) %>% mutate(age_r = case_when(age >= 65 ~ ">=65",age < 65 ~ "<65"))
estimate_ror_bygroup(als_faers_data_unified %>% filter(!is.na(age)) %>% mutate(age_r = case_when(age >= 65 ~ ">=65",age < 65 ~ "<65")) %>%
filter(age_r %in% c(">=65", "<65")),
group_of_interest_col = "age_r",
group_of_interest_ref = ">=65",
event_of_interest_col = "pt")
estimate_ror_bygroup(als_faers_data_unified  %>% filter(sex %in% c("F", "M")),
group_of_interest_col = "sex",
group_of_interest_ref = "M",
event_of_interest_col = "pt")
estimate_ror_bygroup(als_faers_data_unified %>%
filter(!is.na(event_dt)) %>%
mutate(event_dt_r = case_when(event_dt >= as.Date("2020-01-01") ~ ">=2020",
event_dt < as.Date("2020-01-01") ~ "<2020")),
group_of_interest_col = "event_dt_r",
group_of_interest_ref = ">=2020", event_of_interest_col = "pt")
library(rmarkdown)
md_document()
md_document()
md_document()
estimate_ror_bygroup(als_faers_data_unified %>% filter(!is.na(age)) %>% mutate(age_r = case_when(age >= 65 ~ ">=65",age < 65 ~ "<65")) %>%
filter(age_r %in% c(">=65", "<65")),
group_of_interest_col = "age_r",
group_of_interest_ref = ">=65",
event_of_interest_col = "pt") %>%
kableExtra::kable()
estimate_ror_bygroup(als_faers_data_unified %>% filter(!is.na(age)) %>% mutate(age_r = case_when(age >= 65 ~ ">=65",age < 65 ~ "<65")) %>%
filter(age_r %in% c(">=65", "<65")),
group_of_interest_col = "age_r",
group_of_interest_ref = ">=65",
event_of_interest_col = "pt")
estimate_ror_bygroup(als_faers_data_unified %>% filter(!is.na(age)) %>% mutate(age_r = case_when(age >= 65 ~ ">=65",age < 65 ~ "<65")) %>%
filter(age_r %in% c(">=65", "<65")),
group_of_interest_col = "age_r",
group_of_interest_ref = ">=65",
event_of_interest_col = "pt") %>%
arrange(total_events) %>%
slice(1:10) %>%
kableExtra::kable()
render("Untitled.Rmd", md_document())
setwd("/Users/jferreira-admin/Desktop")
render("Untitled.Rmd", md_document())
setwd("~/PhD/faersquarterlydata")
install.packages("gitcreds")
library(gitcreds)
gitcreds_set()
devtools::load_all(".")
summary_faersdata(faers_data_table)
summary_faersdata(als_faers_data_unified)
unify_tabular_ascii(ascii_list = als_faers_data)
devtools::build()
devtools::release()
devtools::release()
devtools::load_all(".")
load("~/PhD/faersquarterlydata/data/als_faers_data.rda")
als_faers_data_unified
als_faers_data$demographics
als_faers_data$drug
als_faers_data$indication
als_faers_data$reaction
als_faers_data$report_source
als_faers_data$therapy
als_faers_data$demographics = als_faers_data$demographics[1:1000,]
als_faers_data$drug = als_faers_data$drug[1:1000,]
als_faers_data$indication = als_faers_data$indication[1:1000,]
als_faers_data$outcome = als_faers_data$outcome[1:1000,]
als_faers_data$reaction = als_faers_data$reaction[1:2000,]
als_faers_data$therapy = als_faers_data$therapy[1:1000,]
use_data(als_faers_data)
usethis::use_data(als_faers_data)
usethis::use_data(als_faers_data, overwrite = TRUE)
devtools::release()
check_rhub()
devtools::check_rhub()
devtools::check_win_devel()
library(devtools)
library(devtools)
devtools::check_win_devel()
devtools::load_all(".")
faers_ascii_data <- retrieve_faersascii(ascii_dir = "resources/test_zip_ex_dir/ASCII")
getwd()
faers_ascii_data <- retrieve_faersascii(ascii_dir = "/tests/testthat/resources/test_zip_ex_dir/ASCII")
faers_ascii_data <- retrieve_faersascii(ascii_dir = "tests/testthat/resources/test_zip_ex_dir/ASCII")
ascii_dir = "tests/testthat/resources/test_zip_ex_dir/ASCII"
cache_path = NULL
drug_indication_pattern = NULL
drug_pattern = NULL
primary_suspect = TRUE
#setting global vars
caseid <- role_cod <- drugname <- indi_pt <- primaryid <- indi_drug_seq <-
ichicsr <- . <- NULL
if (!dir.exists(ascii_dir)) {
stop("directory does not exist")
}
ascii_files <- list.files(ascii_dir, full.names = TRUE, pattern = ".txt")
ascii_files
ascii_drug_files <- ascii_files[which(stringr::str_detect(ascii_files, pattern = "drug|DRUG|indi|INDI"))]
ascii_drug_files
ascii_drug_files
ascii_files <- list.files(ascii_dir, full.names = TRUE, pattern = ".txt")
ascii_drug_files <- ascii_files[which(stringr::str_detect(ascii_files, pattern = "drug|DRUG|indi|INDI"))]
ascii_drug_files
ascii_files
ascii_drug_files
#getduplicated caseIDs
duplicated_caseids <- get_duplicate_caseids(...)
# gather drug files
drug_info <- tibble::tibble()
indi_info <- tibble::tibble()
drug_indi_info <- tibble::tibble()
ascii_drug_files
faers_ascii_data <- retrieve_faersascii(ascii_dir = "tests/testthat/resources/test_zip_ex_dir/ASCII")
faers_ascii_data_unified <- unify_tabular_ascii(ascii_list = faers_ascii_data)
faers_ascii_data_unified
testthat::expect_true(is.list(summary_faersdata(faers_ascii_data_unified)))
summary_faersdata(faers_ascii_data_unified)
faers_ascii_data_unified
faers_ascii_data
faers_ascii_data_unified
ascii_list = faers_ascii_data
#setting global vars
primaryid <- caseid <- indi_drug_seq <- indi_pt <- dsg_drug_seq <- drugname <-
role_cod <- start_dt <- reporter_country <- sex <- event_dt <- age <- age_YR <-
indi_pt_all <- drugname_all <- start_dt_ps <- caseversion <- NULL
drug_indi_info <- ascii_list$drug %>%
mutate_at("drugname", ~stringr::str_squish(.)) %>%
left_join(ascii_list$indication %>% group_by(primaryid, caseid, indi_drug_seq) %>%
summarise(indi_pt = paste(sort(unique(indi_pt)), collapse = "/"), .groups = "keep") %>%
ungroup(), by = c("primaryid", "caseid", "drug_seq" = "indi_drug_seq")) %>%
left_join(ascii_list$therapy %>%
distinct(primaryid, caseid, dsg_drug_seq, .keep_all = TRUE),
by = c("primaryid", "caseid", "drug_seq" = "dsg_drug_seq"))
outcome_info <- ascii_list$outcome %>%
tidyr::pivot_wider(
id_cols = c("primaryid", "caseid"), names_from = "outc_code",
values_fill = "0", values_from = "outc_code", values_fn = ~ ifelse(. == "0", "0", "1"),
names_prefix = "outcome_"
)
report_source_info <- ascii_list$report_source %>%
tidyr::pivot_wider(
id_cols = c("primaryid", "caseid"), names_from = "rpsr_cod",
values_fill = "0", values_from = "rpsr_cod", values_fn = ~ ifelse(. == "0", "0", "1"),
names_prefix = "report_source_"
)
unified_faers <- ascii_list$reaction %>%
left_join(distinct(ascii_list$demographics, primaryid, caseid, .keep_all = TRUE),
by = c("primaryid", "caseid")) %>%
mutate(patient_drug = lapply(as.integer(primaryid), FUN = function(x) {
drug_indi_info %>%
filter(primaryid == x) %>%
mutate_at(c("prod_ai", "drugname", "indi_pt"), ~stringr::str_squish(.)) %>%
suppressMessages()
})) %>%
left_join(outcome_info, by = c("primaryid", "caseid")) %>%
left_join(report_source_info, by = c("primaryid", "caseid")) %>%
left_join(drug_indi_info %>%
group_by(primaryid, caseid) %>%
summarise(
indi_pt_all = paste(sort(unique(indi_pt)), collapse = " + "),
drugname_all = paste(sort(unique(drugname)), collapse = " + "),
.groups = "keep"
) %>%
ungroup(), by = c("primaryid", "caseid")) %>%
left_join(drug_indi_info %>%
filter(role_cod == "PS") %>%
group_by(primaryid, caseid) %>%
summarise(
indi_pt_ps = sort(unique(indi_pt)),
drugname_ps = paste(sort(unique(drugname)), collapse = " + "),
start_dt_ps = unique(start_dt),
.groups = "keep"
) %>%
ungroup() %>% suppressWarnings(), by = c("primaryid", "caseid"))  %>%
mutate(age_YR = case_when(age_cod == "YR" ~ as.numeric(age),
age_cod == "DEC" ~ as.numeric(age)*10,
age_cod == "MON" ~ as.numeric(age)/12,
age_cod == "WK" ~ as.numeric(age)/(365/7),
age_cod == "DY" ~ as.numeric(age)/365,
age_cod == "HR" ~ as.numeric(age)/(365*24),
TRUE ~ as.numeric(age))) %>%
relocate(age_YR, .after = "age")
#de-duplication
unified_faers <- unified_faers %>%
mutate_at("pt", ~stringr::str_squish(.))
#latest case version
unified_faers <- unified_faers %>%
group_by(caseid) %>%
filter(caseversion == max(caseversion)) %>%
ungroup()
#
# #remove suspected duplicated cases
index_to_remove <- which(duplicated(unified_faers [,c( "reporter_country",
"sex", "event_dt",
"age", "pt",
"indi_pt_all",
"drugname_all",
"start_dt_ps")]) &
!is.na(unified_faers$reporter_country) &
!is.na(unified_faers$sex) &
!is.na(unified_faers$event_dt) &
!is.na(unified_faers$age) &
!is.na(unified_faers$pt) &
!is.na(unified_faers$indi_pt_all) &
!is.na(unified_faers$drugname_all) &
!is.na(unified_faers$start_dt_ps)
)
if(length(index_to_remove) >=1){unified_faers <- unified_faers[-index_to_remove,]}
#trim
message("unification and de-duplication applied.")
#setting global vars
primaryid <- caseid <- indi_drug_seq <- indi_pt <- dsg_drug_seq <- drugname <-
role_cod <- start_dt <- reporter_country <- sex <- event_dt <- age <- age_YR <-
indi_pt_all <- drugname_all <- start_dt_ps <- caseversion <- NULL
drug_indi_info <- ascii_list$drug %>%
mutate_at("drugname", ~stringr::str_squish(.)) %>%
left_join(ascii_list$indication %>% group_by(primaryid, caseid, indi_drug_seq) %>%
summarise(indi_pt = paste(sort(unique(indi_pt)), collapse = "/"), .groups = "keep") %>%
ungroup(), by = c("primaryid", "caseid", "drug_seq" = "indi_drug_seq")) %>%
left_join(ascii_list$therapy %>%
distinct(primaryid, caseid, dsg_drug_seq, .keep_all = TRUE),
by = c("primaryid", "caseid", "drug_seq" = "dsg_drug_seq"))
outcome_info <- ascii_list$outcome %>%
tidyr::pivot_wider(
id_cols = c("primaryid", "caseid"), names_from = "outc_code",
values_fill = "0", values_from = "outc_code", values_fn = ~ ifelse(. == "0", "0", "1"),
names_prefix = "outcome_"
)
report_source_info <- ascii_list$report_source %>%
tidyr::pivot_wider(
id_cols = c("primaryid", "caseid"), names_from = "rpsr_cod",
values_fill = "0", values_from = "rpsr_cod", values_fn = ~ ifelse(. == "0", "0", "1"),
names_prefix = "report_source_"
)
unified_faers <- ascii_list$reaction %>%
left_join(distinct(ascii_list$demographics, primaryid, caseid, .keep_all = TRUE),
by = c("primaryid", "caseid")) %>%
mutate(patient_drug = lapply(as.integer(primaryid), FUN = function(x) {
drug_indi_info %>%
filter(primaryid == x) %>%
mutate_at(c("prod_ai", "drugname", "indi_pt"), ~stringr::str_squish(.)) %>%
suppressMessages()
})) %>%
left_join(outcome_info, by = c("primaryid", "caseid")) %>%
left_join(report_source_info, by = c("primaryid", "caseid")) %>%
left_join(drug_indi_info %>%
group_by(primaryid, caseid) %>%
summarise(
indi_pt_all = paste(sort(unique(indi_pt)), collapse = " + "),
drugname_all = paste(sort(unique(drugname)), collapse = " + "),
.groups = "keep"
) %>%
ungroup(), by = c("primaryid", "caseid")) %>%
left_join(drug_indi_info %>%
filter(role_cod == "PS") %>%
group_by(primaryid, caseid) %>%
summarise(
indi_pt_ps = sort(unique(indi_pt)),
drugname_ps = paste(sort(unique(drugname)), collapse = " + "),
start_dt_ps = unique(start_dt),
.groups = "keep"
) %>%
ungroup() %>% suppressWarnings(), by = c("primaryid", "caseid"))  %>%
mutate(age_YR = case_when(age_cod == "YR" ~ as.numeric(age),
age_cod == "DEC" ~ as.numeric(age)*10,
age_cod == "MON" ~ as.numeric(age)/12,
age_cod == "WK" ~ as.numeric(age)/(365/7),
age_cod == "DY" ~ as.numeric(age)/365,
age_cod == "HR" ~ as.numeric(age)/(365*24),
TRUE ~ as.numeric(age))) %>%
relocate(age_YR, .after = "age")
faers_ascii_data <- retrieve_faersascii(ascii_dir = "tests/testthat/resources/test_zip_ex_dir/ASCII")
faers_ascii_data_unified <- unify_tabular_ascii(ascii_list = faers_ascii_data)
#setting global vars
primaryid <- caseid <- indi_drug_seq <- indi_pt <- dsg_drug_seq <- drugname <-
role_cod <- start_dt <- reporter_country <- sex <- event_dt <- age <- age_YR <-
indi_pt_all <- drugname_all <- start_dt_ps <- caseversion <- NULL
drug_indi_info <- ascii_list$drug %>%
mutate_at("drugname", ~stringr::str_squish(.)) %>%
left_join(ascii_list$indication %>% group_by(primaryid, caseid, indi_drug_seq) %>%
summarise(indi_pt = paste(sort(unique(indi_pt)), collapse = "/"), .groups = "keep") %>%
ungroup(), by = c("primaryid", "caseid", "drug_seq" = "indi_drug_seq")) %>%
left_join(ascii_list$therapy %>%
distinct(primaryid, caseid, dsg_drug_seq, .keep_all = TRUE),
by = c("primaryid", "caseid", "drug_seq" = "dsg_drug_seq"))
drug_indi_info
faers_ascii_data
#setting global vars
primaryid <- caseid <- indi_drug_seq <- indi_pt <- dsg_drug_seq <- drugname <-
role_cod <- start_dt <- reporter_country <- sex <- event_dt <- age <- age_YR <-
indi_pt_all <- drugname_all <- start_dt_ps <- caseversion <- NULL
ascii_list
ascii_list$reaction %>%
left_join(distinct(ascii_list$demographics, primaryid, caseid, .keep_all = TRUE),
by = c("primaryid", "caseid"))
ascii_list$reaction
ascii_list$reaction %>%
left_join(distinct(ascii_list$demographics, primaryid, caseid, .keep_all = TRUE),
by = c("primaryid", "caseid"))
faers_ascii_data <- retrieve_faersascii(ascii_dir = "tests/testthat/resources/test_zip_ex_dir/ASCII")
faers_ascii_data_unified <- unify_tabular_ascii(ascii_list = faers_ascii_data)
ascii_list$reaction
ascii_list$reaction %>%
left_join(distinct(ascii_list$demographics, primaryid, caseid, .keep_all = TRUE),
by = c("primaryid", "caseid"), relationship = "many-to-many")
ascii_list$reaction %>%
left_join(distinct(ascii_list$demographics, primaryid, caseid, .keep_all = TRUE),
by = c("primaryid", "caseid"))
source("~/PhD/faersquarterlydata/R/read_func_ascii.R")
faers_ascii_data <- retrieve_faersascii(ascii_dir = "tests/testthat/resources/test_zip_ex_dir/ASCII")
faers_ascii_data_unified <- unify_tabular_ascii(ascii_list = faers_ascii_data)
install.packages("gitcreds")
library(gitcreds)
gitcreds_set()
devtools::check_win_devel()
devtools::check_win_devel()
faers_ascii_data <- retrieve_faersascii(ascii_dir = "tests/testthat/resources/test_zip_ex_dir/ASCII")
faers_ascii_data_unified <- unify_tabular_ascii(ascii_list = faers_ascii_data)
testthat::expect_true(is.list(summary_faersdata(faers_ascii_data_unified)))
testthat::test_that("summary_faersdata", {
faers_ascii_data <- retrieve_faersascii(ascii_dir = "tests/testthat/resources/test_zip_ex_dir/ASCII")
faers_ascii_data_unified <- unify_tabular_ascii(ascii_list = faers_ascii_data)
testthat::expect_true(is.list(summary_faersdata(faers_ascii_data_unified)))
})
system.time({faers_ascii_data <- retrieve_faersascii(ascii_dir = "tests/testthat/resources/test_zip_ex_dir/ASCII")})
system.time({unify_tabular_ascii(ascii_list = faers_ascii_data)})
system.time({summary_faersdata(faers_ascii_data_unified)})
devtools::check_win_devel()
devtools::check_win_devel()
devtools::check_win_devel()
devtools::check_win_release()
system.time({summary_faersdata(faers_ascii_data_unified)})
faers_ascii_data <- retrieve_faersascii(ascii_dir = "resources/test_zip_ex_dir/ASCII")
devtools::load_all(".")
system.time({summary_faersdata(faers_ascii_data_unified)})
faers_ascii_data <- retrieve_faersascii(ascii_dir = "tests/testthat/resources/test_zip_ex_dir/ASCII")
system.time({summary_faersdata(faers_ascii_data_unified)})
faers_ascii_data_unified <- unify_tabular_ascii(ascii_list = faers_ascii_data)
system.time({summary_faersdata(faers_ascii_data_unified)})
library(faersquarterlydata)
load("~/PhD/faersquarterlydata/data/als_faers_data_unified.rda")
als_faers_data_unified
als_faers_data_unified <- als_faers_data_unified[500,]
usethis::use_data(als_faers_data_unified, overwrite = TRUE)
load("~/PhD/faersquarterlydata/data/als_faers_data.rda")
als_faers_data$demographics = als_faers_data$demographics[1:100,]
als_faers_data$drug = als_faers_data$drug[1:100,]
als_faers_data$indication = als_faers_data$indication[1:100,]
als_faers_data$outcome = als_faers_data$outcome[1:100,]
als_faers_data$reaction = als_faers_data$reaction[1:300,]
als_faers_data$therapy = als_faers_data$therapy[1:100,]
usethis::use_data(als_faers_data, overwrite = TRUE)
library(faersquarterlydata)
devtools::check_win_devel()
devtools::check_win_devel()
load("~/PhD/faersquarterlydata/data/als_faers_data_unified.rda")
estimate_ror_bygroup(tabular_faers_data = dplyr::filter(als_faers_data_unified,
sex %in% c("M", "F")),
group_of_interest_col = "sex",
group_of_interest_ref = "M",
event_of_interest_col = "pt")
estimate_ror_bygroup(tabular_faers_data = dplyr::filter(als_faers_data_unified,
sex %in% c("M", "F")),
group_of_interest_col = "sex",
group_of_interest_ref = "F",
event_of_interest_col = "pt")
als_faers_data
als_faers_data_unified
als_faers_data_unified %>% nrow()
library(faersquarterlydata)
usethis::use_data(faersquarterlydata::als_faers_data)
als_faers_data <- faersquarterlydata::als_faers_data
als_faers_data <- faersquarterlydata::als_faers_data_unified
als_faers_data <- faersquarterlydata::als_faers_data
als_faers_data_unified <- faersquarterlydata::als_faers_data_unified
usethis::use_data(als_faers_data)
usethis::use_data(als_faers_data, overwrite = TRUE)
usethis::use_data(als_faers_data_unified, overwrite = TRUE)
estimate_ror_bygroup(tabular_faers_data = dplyr::filter(als_faers_data_unified,
sex %in% c("M", "F")),
group_of_interest_col = "sex",
group_of_interest_ref = "M",
event_of_interest_col = "pt")
pkgbuild::check_build_tools(debug = TRUE)
pkgbuild::check_build_tools(debug = TRUE)
library(faersquarterlydata)
load("~/PhD/faersquarterlydata/data/als_faers_data_unified.rda")
als_faers_data_unified
load("~/PhD/faersquarterlydata/data/als_faers_data.rdata")
als_faers_data
usethis::use_data(als_faers_data)
als_faers_data_unified <- unify_tabular_ascii(als_faers_data)
usethis::use_data(als_faers_data_unified, overwrite = TRUE)
estimate_ror_bygroup(tabular_faers_data = dplyr::filter(als_faers_data_unified[1:100,],
sex %in% c("M", "F")),
group_of_interest_col = "sex",
group_of_interest_ref = "M",
event_of_interest_col = "pt")
estimate_ror_bygroup(tabular_faers_data = dplyr::filter(als_faers_data_unified,
sex %in% c("M", "F") %>%
slice(1:100)),
group_of_interest_col = "sex",
group_of_interest_ref = "M",
event_of_interest_col = "pt")
library(dplyr)
estimate_ror_bygroup(tabular_faers_data = dplyr::filter(als_faers_data_unified,
sex %in% c("M", "F") %>%
slice(1:100)),
group_of_interest_col = "sex",
group_of_interest_ref = "M",
event_of_interest_col = "pt")
estimate_ror_bygroup(tabular_faers_data = dplyr::filter(als_faers_data_unified,
sex %in% c("M", "F") %>%
slice(1:1000)),
group_of_interest_col = "sex",
group_of_interest_ref = "M",
event_of_interest_col = "pt")
estimate_ror_bygroup(tabular_faers_data = dplyr::filter(als_faers_data_unified,
sex %in% c("M", "F") )%>%
slice(1:100),
group_of_interest_col = "sex",
group_of_interest_ref = "M",
event_of_interest_col = "pt")
estimate_ror_bygroup(tabular_faers_data = dplyr::filter(als_faers_data_unified,
sex %in% c("M", "F") )%>%
slice(1:50),
group_of_interest_col = "sex",
group_of_interest_ref = "M",
event_of_interest_col = "pt")
estimate_ror_bygroup(tabular_faers_data = dplyr::filter(als_faers_data_unified,
sex %in% c("M", "F") )%>%
slice(1:20),
group_of_interest_col = "sex",
group_of_interest_ref = "M",
event_of_interest_col = "pt")
estimate_ror_bygroup(tabular_faers_data = dplyr::filter(als_faers_data_unified,
sex %in% c("M", "F") )%>%
slice(1:50),
group_of_interest_col = "sex",
group_of_interest_ref = "M",
event_of_interest_col = "pt")
dim(als_faers_data_unified)
estimate_ror_bygroup(tabular_faers_data = dplyr::filter(als_faers_data_unified,
sex %in% c("M", "F") )%>%
slice(1:50),
group_of_interest_col = "sex",
group_of_interest_ref = "M",
event_of_interest_col = "pt")
unify_tabular_ascii(ascii_list = als_faers_data)
system.time({unify_tabular_ascii(ascii_list = als_faers_data)})
devtools::check()
library(faersquarterlydata)
devtools::check()
devtools::check()
install.packages("devtools")
library(devtools)
devtools::load_all(".")
